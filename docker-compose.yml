version: "3.8"

services:
  # Redis service for caching and session storage
  redis:
    image: redis:7.2-alpine
    container_name: agents-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - app-network

  # Build index service - runs once to build the knowledge index
  build-index:
    build:
      context: ./backend
      dockerfile: Dockerfile.build-index
    container_name: agents-build-index
    environment:
      - ENVIRONMENT=production
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - app-network
    env_file:
      - ./backend/.env
    profiles:
      - build

  # FastAPI backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: agents-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - ENVIRONMENT=production
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/__pycache__
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
    env_file:
      - ./backend/.env

  # React frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - DOCKER_COMPOSE=true
    container_name: agents-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - app-network
    environment:
      - NODE_ENV=production
      - DOCKER_COMPOSE=true
      - VITE_API_BASE_URL=http://localhost:8000/api/v1

# Named volumes for data persistence
volumes:
  redis_data:
    driver: local

# Custom network for service communication
networks:
  app-network:
    driver: bridge
